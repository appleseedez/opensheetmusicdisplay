import { MusicSystem } from "./MusicSystem";
import { GraphicalStaffEntry } from "./GraphicalStaffEntry";
import { SourceMeasure } from "../VoiceData/SourceMeasure";
import { StaffLine } from "./StaffLine";
import { Staff } from "../VoiceData/Staff";
import { GraphicalObject } from "./GraphicalObject";
import { ClefInstruction } from "../VoiceData/Instructions/ClefInstruction";
import { KeyInstruction } from "../VoiceData/Instructions/KeyInstruction";
import { RhythmInstruction } from "../VoiceData/Instructions/RhythmInstruction";
import { Fraction } from "../../Common/DataObjects/fraction";
import { SystemLinesEnum } from "./SystemLinesEnum";
export declare abstract class StaffMeasure extends GraphicalObject {
    protected firstInstructionStaffEntry: GraphicalStaffEntry;
    protected lastInstructionStaffEntry: GraphicalStaffEntry;
    constructor(staff?: Staff, parentSourceMeasure?: SourceMeasure, staffLine?: StaffLine);
    parentSourceMeasure: SourceMeasure;
    staffEntries: GraphicalStaffEntry[];
    parentMusicSystem: MusicSystem;
    beginInstructionsWidth: number;
    minimumStaffEntriesWidth: number;
    staffEntriesScaleFactor: number;
    endInstructionsWidth: number;
    hasError: boolean;
    private parentStaff;
    private measureNumber;
    private parentStaffLine;
    ParentStaff: Staff;
    MeasureNumber: number;
    FirstInstructionStaffEntry: GraphicalStaffEntry;
    LastInstructionStaffEntry: GraphicalStaffEntry;
    ParentStaffLine: StaffLine;
    resetLayout(): void;
    getLineWidth(line: SystemLinesEnum): number;
    addClefAtBegin(clef: ClefInstruction): void;
    addKeyAtBegin(currentKey: KeyInstruction, previousKey: KeyInstruction, currentClef: ClefInstruction): void;
    addRhythmAtBegin(rhythm: RhythmInstruction): void;
    addClefAtEnd(clef: ClefInstruction): void;
    setPositionInStaffline(xPos: number): void;
    setWidth(width: number): void;
    layoutSymbols(): void;
    findGraphicalStaffEntryFromTimestamp(relativeTimestamp: Fraction): GraphicalStaffEntry;
    findGraphicalStaffEntryFromVerticalContainerTimestamp(absoluteTimestamp: Fraction): GraphicalStaffEntry;
    hasSameDurationWithSourceMeasureParent(): boolean;
    hasMultipleVoices(): boolean;
    isVisible(): boolean;
    getGraphicalMeasureDurationFromStaffEntries(): Fraction;
    addGraphicalStaffEntry(graphicalStaffEntry: GraphicalStaffEntry): void;
    addGraphicalStaffEntryAtTimestamp(staffEntry: GraphicalStaffEntry): void;
    beginsWithLineRepetition(): boolean;
    endsWithLineRepetition(): boolean;
    beginsWithWordRepetition(): boolean;
    endsWithWordRepetition(): boolean;
}
